@mixin base-element( $button: false, $state-parent: &, $state-object: '' ) {
	color: $color;
	border: $border;
	border-radius: $border-radius;

	outline: none;

	background: if( $button, $background-button, $background );	
	box-shadow: if( $button, $box-shadow-button, $box-shadow );	
	font-shadow: $font-shadow;

	@at-root #{$state-parent}:not([disabled]):not(.disabled):hover #{$state-object} {
		border: $border-hover;
		background: if( $button, $background-button-hover, $background-hover );	
		box-shadow: if( $button, $box-shadow-button-hover, $box-shadow-hover );	
		font-shadow: $font-shadow-hover;
	}

	@at-root #{$state-parent}:not([disabled]):not(.disabled):focus #{$state-object},
			#{$state-parent}:not([disabled]):not(.disabled).focused #{$state-object}
	{
		border: $border-focus;
		background: if( $button, $background-button-focus, $background-focus );	
		box-shadow: if( $button, $box-shadow-button-focus, $box-shadow-focus );	
		font-shadow: $font-shadow-focus;
	}

	@at-root #{$state-parent}:not([disabled]):not(.disabled):active #{$state-object} {
		border: $border-active;
		background: if( $button, $background-button-active, $background-active );	
		box-shadow: if( $button, $box-shadow-button-active, $box-shadow-active );	
		font-shadow: $font-shadow-active;
	}

	@at-root #{$state-parent}[disabled] #{$state-object},
			#{$state-parent}.disabled #{$state-object} {
		border: $border-disabled;
		background: $background-disabled !important;
		box-shadow: none !important;
		color: $color-disabled !important;
	}
}

@mixin button( $background, $color, $border, $lighten ) {
	color: $color;
	background-color: $background;

	@if( $lighten ) {
		border-color: $border;
		
		&:hover {
			color: lighten( $color, 5% );
			background-color: lighten( $background, 5% );
			border-color: lighten( $border, 20% );
		}
		&:focus {
			color: lighten( $color, 5% );
			background-color: lighten( $background, 10% );
			border-color: lighten( $border, 20% );
		}
		&:active {
			color: lighten( $color, 5%);
			background-color: lighten( $background, 10% );
			border-color: lighten( $border, 20% );
		}
	}
	@else {
		border-color: darken( $background,5% );
		&:hover {
			color: darken( $color, 5%);
			background-color: darken( $background,5% );
			border-color: darken( $border,10% );
		}
		&:focus {
			color: darken( $color, 5%);
			background-color: darken( $background, 10% );
			border-color: darken( $border, 10% );
		}
		&:active {
			color: darken( $color, 5%);
			background-color: darken( $background, 10% );
			border-color: darken( $border, 10% );
		}
	}
}

@mixin hi-light( $background ) {
	@if( $style == light ) {
		background-color: darken( $background, 10% );
	}
	@else {
		background-color: lighten( $background, 5% );
	}
}

@mixin arrow( $size, $color, $rounded ) {
	@if( $rounded ) {
		top: $select-arrow-size;
		border: $size solid $color;
		border-radius: 50%;	
	}
	@else {
		top: $select-arrow-size - 1;
		border-right: $size solid transparent;
		border-left: $size solid transparent;
		border-top: $size solid $color;
	}
}